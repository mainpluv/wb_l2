package main

import (
	"fmt"
)

func test() (x int) {
	defer func() {
		x++
	}()
	x = 1
	return
}

func anotherTest() int {
	var x int
	defer func() {
		x++
	}()
	x = 1
	return x
}

func main() {
	fmt.Println(test())        // 2
	fmt.Println(anotherTest()) // 1
}

// выведется 2\n1, так как первая функция вернет актуальное значение,
// потому что мы объявили х как возвращаемое значение и оно вернется после
// выполнения defer. Во второй функции мы сначала вернем х (1), а только
// потом он инкрементируется в defer.

// defer используется для отложенного выполнения функции до завершения
// окружающей функции, defer'ы выполняются в порядке LIFO (последним пришел - первым вышел).
